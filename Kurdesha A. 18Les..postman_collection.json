{
	"info": {
		"_postman_id": "912c916b-5ab4-4857-a4c8-f4432c8a9994",
		"name": "Kurdesha A. 18Les.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40284268"
	},
	"item": [
		{
			"name": "Book ISBN Numbers",
			"item": [
				{
					"name": "Is Valid ISBN13 Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Тест 1: Перевірка статусу відповіді\r",
									"pm.test(\"Статус відповіді 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Тест 2: Перевірка Content-Type\r",
									"pm.test(\"Content-Type є text/xml\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"text/xml; charset=utf-8\");\r",
									"});\r",
									"\r",
									"// Тест 3: Перевірка наявності тегу IsValidISBN13Result\r",
									"pm.test(\"Містить тег IsValidISBN13Result\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"IsValidISBN13Result\");\r",
									"});\r",
									"\r",
									"// Тест 4: Перевірка, що результат є true\r",
									"pm.test(\"Результат є true\", function () {\r",
									"    var xml = xml2Json(pm.response.text());\r",
									"    pm.expect(xml[\"soap:Envelope\"][\"soap:Body\"][\"m:IsValidISBN13Response\"][\"m:IsValidISBN13Result\"]).to.eql(\"true\");\r",
									"});\r",
									"// Тест 5: Перевірка часу відповіді\r",
									"pm.test(\"Час відповіді менше 1000мс\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"// Тест 6: Перевірка наявності заголовку Server\r",
									"pm.test(\"Містить заголовок Server\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"// Тест 7: Перевірка, що заголовок Connection є close\r",
									"pm.test(\"Містить тег IsValidISBN13Result\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"IsValidISBN13Result\");\r",
									"});\r",
									"\r",
									"\r",
									"// Тест 8: Перевірка, що тіло відповіді не порожнє\r",
									"pm.test(\"Тіло відповіді не порожнє\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.be.empty;\r",
									"});\r",
									"\r",
									"// Тест 9: Перевірка, що відповідь містить XML декларацію\r",
									"pm.test(\"Містить XML декларацію\", function () {\r",
									"    pm.expect(pm.response.text()).to.match(/^<\\?xml/);\r",
									"});\r",
									"\r",
									"// Тест 10: Перевірка, що відповідь містить тег soap:Envelope\r",
									"pm.test(\"Містить тег soap:Envelope\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"soap:Envelope\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml; charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN13 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>978-1-4612-9090-2</sISBN>\n    </IsValidISBN13>\n  </soap:Body>\n</soap:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 12 digits and compare the result with the checksum number at the end. You have to pass a 13 digits number."
					},
					"response": []
				},
				{
					"name": "Is Valid ISBN10 Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Тест 1: Перевірка статусу відповіді\r",
									"pm.test(\"Статус відповіді 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Тест 2: Перевірка Content-Type\r",
									"pm.test(\"Content-Type є text/xml\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"text/xml; charset=utf-8\");\r",
									"});\r",
									"\r",
									"// Тест 3: Перевірка наявності тегу IsValidISBN13Result\r",
									"pm.test(\"XML-відповідь не порожня\", function () {\r",
									"    const res = pm.response.text();\r",
									"    console.log(res);\r",
									"    pm.expect(res).to.include(\"soap:Envelope\");\r",
									"});\r",
									"\r",
									"// Тест 4: Перевірка, що результат є true\r",
									"pm.test(\"Результат є true\", function () {\r",
									"    var xml = xml2Json(pm.response.text());\r",
									"    pm.expect(xml[\"soap:Envelope\"][\"soap:Body\"][\"m:IsValidISBN10Response\"][\"m:IsValidISBN10Result\"]).to.eql(\"true\");\r",
									"});\r",
									"// Тест 5: Перевірка часу відповіді\r",
									"pm.test(\"Час відповіді менше 1000мс\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"// Тест 6: Перевірка наявності заголовку Server\r",
									"pm.test(\"Містить заголовок Server\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"// Тест 7: Перевірка, що заголовок Connection є close\r",
									"pm.test(\"Має заголовок Content-Type\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type є text/xml\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/xml\");\r",
									"});\r",
									"\r",
									"pm.test(\"Заголовок Server присутній\", function () {\r",
									"    pm.response.to.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"\r",
									"// Тест 8: Перевірка, що тіло відповіді не порожнє\r",
									"pm.test(\"Тіло відповіді не порожнє\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.be.empty;\r",
									"});\r",
									"\r",
									"// Тест 9: Перевірка, що відповідь містить XML декларацію\r",
									"pm.test(\"Містить XML декларацію\", function () {\r",
									"    pm.expect(pm.response.text()).to.match(/^<\\?xml/);\r",
									"});\r",
									"\r",
									"// Тест 10: Перевірка, що відповідь містить тег soap:Envelope\r",
									"pm.test(\"Містить тег soap:Envelope\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"soap:Envelope\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml; charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <IsValidISBN10 xmlns=\"http://webservices.daehosting.com/ISBN\">\n      <sISBN>0-19-852663-6</sISBN>\n    </IsValidISBN10>\n  </soap:Body>\n</soap:Envelope>"
						},
						"url": {
							"raw": "http://webservices.daehosting.com/services/isbnservice.wso",
							"protocol": "http",
							"host": [
								"webservices",
								"daehosting",
								"com"
							],
							"path": [
								"services",
								"isbnservice.wso"
							]
						},
						"description": "The test is done by calculation on the first 9 digits and compare the result with the checksum number at the end. You have to pass a 10 digits number or 8 digits and an X."
					},
					"response": []
				}
			],
			"description": "SOAP APIs for book ISBN numbers.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}